name: Python package

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:

  build:
    name: Build for (${{ '{{ ' -}} matrix.python-version }}, ${{ '{{ ' -}} matrix.os }})
    runs-on: ${{ '{{ ' -}} matrix.os }}
{%- if AddPostgres %}
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres_{{package_name}}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
{%- endif %}

    strategy:
      fail-fast: true
      matrix:
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        python-version: ['3.10', '3.11', '3.12']
    steps:
      - uses: actions/checkout@v4
{%- if AddPostgres %}
      - name: Set up Postgres Usage
        run: |
          echo "localhost:5432:*:postgres:postgres_{{package_name}}" >> $HOME/.pgpass
          chmod 0600 $HOME/.pgpass
          sudo apt-get install -y postgresql-client
          psql -c 'create database _test_{{package_name}};' -U postgres --host localhost
{%- endif %}
      - name: Set up Python ${{ '{{ ' -}} matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ '{{ ' -}} matrix.python-version }}
      - name: Python info
        shell: bash -e {0}
        run: |
          which python
          python --version
      - name: Upgrade pip and install dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          python -m pip install .[dev,publishing]
      - name: Run unit tests
        run: python -m pytest -v
      - name: Verify that we can build the package
        run: python -m build

{%- if AddLinting %}
  lint:
    name: Linting build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: 3.9
      - name: Python info
        shell: bash -e {0}
        run: |
          which python
          python --version
      - name: Upgrade pip and install dependencies
        run: |
          python -m pip install --upgrade pip setuptools
          python -m pip install .[dev,publishing]
      - name: Check style against standards using ruff
        run: |
          ruff check
          ruff format --check
{%- endif %}
